{"ast":null,"code":"var _jsxFileName = \"E:\\\\CredLens\\\\frontend\\\\src\\\\components\\\\ThemeToggle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Moon, Sun } from 'lucide-react';\n\n// Persists theme preference in localStorage and toggles `dark` class on <html>\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeToggle = () => {\n  _s();\n  const [isDark, setIsDark] = useState(false);\n  useEffect(() => {\n    const stored = localStorage.getItem('theme');\n    const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n    const enableDark = stored ? stored === 'dark' : prefersDark;\n    setIsDark(enableDark);\n    document.documentElement.classList.toggle('dark', enableDark);\n  }, []);\n  const toggle = () => {\n    const next = !isDark;\n    setIsDark(next);\n    document.documentElement.classList.toggle('dark', next);\n    localStorage.setItem('theme', next ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: toggle,\n    className: \"inline-flex items-center space-x-2 px-3 py-2 rounded-lg border border-gray-200 bg-white hover:bg-gray-50 text-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700 dark:border-gray-700 dark:text-gray-200 transition-colors\",\n    \"aria-label\": \"Toggle theme\",\n    title: isDark ? 'Switch to light mode' : 'Switch to dark mode',\n    children: [isDark ? /*#__PURE__*/_jsxDEV(Sun, {\n      className: \"w-4 h-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Moon, {\n      className: \"w-4 h-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 47\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"hidden sm:inline text-sm\",\n      children: isDark ? 'Light' : 'Dark'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeToggle, \"q9ovQTvwIdpxeVii6kJLTuTYpwE=\");\n_c = ThemeToggle;\nexport default ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["React","useEffect","useState","Moon","Sun","jsxDEV","_jsxDEV","ThemeToggle","_s","isDark","setIsDark","stored","localStorage","getItem","prefersDark","window","matchMedia","matches","enableDark","document","documentElement","classList","toggle","next","setItem","type","onClick","className","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/CredLens/frontend/src/components/ThemeToggle.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Moon, Sun } from 'lucide-react';\r\n\r\n// Persists theme preference in localStorage and toggles `dark` class on <html>\r\nconst ThemeToggle = () => {\r\n  const [isDark, setIsDark] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem('theme');\r\n    const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n    const enableDark = stored ? stored === 'dark' : prefersDark;\r\n    setIsDark(enableDark);\r\n    document.documentElement.classList.toggle('dark', enableDark);\r\n  }, []);\r\n\r\n  const toggle = () => {\r\n    const next = !isDark;\r\n    setIsDark(next);\r\n    document.documentElement.classList.toggle('dark', next);\r\n    localStorage.setItem('theme', next ? 'dark' : 'light');\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      onClick={toggle}\r\n      className=\"inline-flex items-center space-x-2 px-3 py-2 rounded-lg border border-gray-200 bg-white hover:bg-gray-50 text-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700 dark:border-gray-700 dark:text-gray-200 transition-colors\"\r\n      aria-label=\"Toggle theme\"\r\n      title={isDark ? 'Switch to light mode' : 'Switch to dark mode'}\r\n    >\r\n      {isDark ? <Sun className=\"w-4 h-4\" /> : <Moon className=\"w-4 h-4\" />}\r\n      <span className=\"hidden sm:inline text-sm\">{isDark ? 'Light' : 'Dark'}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,GAAG,QAAQ,cAAc;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE3CD,SAAS,CAAC,MAAM;IACd,MAAMU,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC5C,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU,IAAID,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;IAClG,MAAMC,UAAU,GAAGP,MAAM,GAAGA,MAAM,KAAK,MAAM,GAAGG,WAAW;IAC3DJ,SAAS,CAACQ,UAAU,CAAC;IACrBC,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,EAAEJ,UAAU,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnB,MAAMC,IAAI,GAAG,CAACd,MAAM;IACpBC,SAAS,CAACa,IAAI,CAAC;IACfJ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,EAAEC,IAAI,CAAC;IACvDX,YAAY,CAACY,OAAO,CAAC,OAAO,EAAED,IAAI,GAAG,MAAM,GAAG,OAAO,CAAC;EACxD,CAAC;EAED,oBACEjB,OAAA;IACEmB,IAAI,EAAC,QAAQ;IACbC,OAAO,EAAEJ,MAAO;IAChBK,SAAS,EAAC,0NAA0N;IACpO,cAAW,cAAc;IACzBC,KAAK,EAAEnB,MAAM,GAAG,sBAAsB,GAAG,qBAAsB;IAAAoB,QAAA,GAE9DpB,MAAM,gBAAGH,OAAA,CAACF,GAAG;MAACuB,SAAS,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAG3B,OAAA,CAACH,IAAI;MAACwB,SAAS,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpE3B,OAAA;MAAMqB,SAAS,EAAC,0BAA0B;MAAAE,QAAA,EAAEpB,MAAM,GAAG,OAAO,GAAG;IAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEb,CAAC;AAACzB,EAAA,CA9BID,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAgCjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
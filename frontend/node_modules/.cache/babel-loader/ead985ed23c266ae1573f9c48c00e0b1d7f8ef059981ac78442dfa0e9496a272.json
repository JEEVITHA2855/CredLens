{"ast":null,"code":"var _jsxFileName = \"E:\\\\CredLens\\\\frontend\\\\src\\\\components\\\\MicroQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MicroQuiz = ({\n  suspiciousPhrases = []\n}) => {\n  _s();\n  const question = useMemo(() => {\n    const hasUrgency = suspiciousPhrases.some(p => ['urgent', 'act now', 'limited time', 'last chance', 'immediately'].includes((p.phrase || '').toLowerCase()));\n    if (hasUrgency) {\n      return {\n        q: 'A post says “Act now! Limited time!” and asks for your OTP. What should you do?',\n        options: ['Reply with the OTP to avoid losing access', 'Ignore the message and verify through the official app/website'],\n        a: 1\n      };\n    }\n    const hasClickbait = suspiciousPhrases.some(p => ['shocking', 'secret', 'you won\\'t believe', 'exposed', 'miracle'].includes((p.phrase || '').toLowerCase()));\n    if (hasClickbait) {\n      return {\n        q: 'An article claims a “miracle cure.” What’s the best first step?',\n        options: ['Share quickly to help others', 'Check if reputable medical sources report the same claim'],\n        a: 1\n      };\n    }\n    return {\n      q: 'No sources are linked in the article. What should you do?',\n      options: ['Assume it’s true if it sounds plausible', 'Look for citations or check fact-checking websites'],\n      a: 1\n    };\n  }, [suspiciousPhrases]);\n  const [choice, setChoice] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n  const submit = () => setSubmitted(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg border border-amber-200 p-4 mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-sm font-semibold text-amber-900 mb-2\",\n      children: \"Quick Micro-Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-amber-900 mb-2\",\n      children: question.q\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: question.options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"flex items-center space-x-2 text-sm text-amber-800\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"microquiz\",\n          checked: choice === idx,\n          onChange: () => setChoice(idx)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: opt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      disabled: choice === null,\n      className: \"mt-2 px-3 py-1.5 bg-amber-600 text-white rounded disabled:opacity-50\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 text-sm {choice===question.a ? 'text-green-700' : 'text-red-700'}\",\n      children: choice === question.a ? 'Correct! Nice critical thinking.' : 'Not quite—look for official sources and avoid urgent requests.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(MicroQuiz, \"GazWaMRAs1zWaUj9G8vEUXi+bLo=\");\n_c = MicroQuiz;\nexport default MicroQuiz;\nvar _c;\n$RefreshReg$(_c, \"MicroQuiz\");","map":{"version":3,"names":["React","useMemo","useState","jsxDEV","_jsxDEV","MicroQuiz","suspiciousPhrases","_s","question","hasUrgency","some","p","includes","phrase","toLowerCase","q","options","a","hasClickbait","choice","setChoice","submitted","setSubmitted","submit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","opt","idx","type","name","checked","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/CredLens/frontend/src/components/MicroQuiz.js"],"sourcesContent":["import React, { useMemo, useState } from 'react';\r\n\r\nconst MicroQuiz = ({ suspiciousPhrases = [] }) => {\r\n  const question = useMemo(() => {\r\n    const hasUrgency = suspiciousPhrases.some(p => ['urgent','act now','limited time','last chance','immediately'].includes((p.phrase||'').toLowerCase()));\r\n    if (hasUrgency) {\r\n      return {\r\n        q: 'A post says “Act now! Limited time!” and asks for your OTP. What should you do?',\r\n        options: ['Reply with the OTP to avoid losing access', 'Ignore the message and verify through the official app/website'],\r\n        a: 1,\r\n      };\r\n    }\r\n    const hasClickbait = suspiciousPhrases.some(p => ['shocking','secret','you won\\'t believe','exposed','miracle'].includes((p.phrase||'').toLowerCase()));\r\n    if (hasClickbait) {\r\n      return {\r\n        q: 'An article claims a “miracle cure.” What’s the best first step?',\r\n        options: ['Share quickly to help others', 'Check if reputable medical sources report the same claim'],\r\n        a: 1,\r\n      };\r\n    }\r\n    return {\r\n      q: 'No sources are linked in the article. What should you do?',\r\n      options: ['Assume it’s true if it sounds plausible', 'Look for citations or check fact-checking websites'],\r\n      a: 1,\r\n    };\r\n  }, [suspiciousPhrases]);\r\n\r\n  const [choice, setChoice] = useState(null);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const submit = () => setSubmitted(true);\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg border border-amber-200 p-4 mt-4\">\r\n      <h4 className=\"text-sm font-semibold text-amber-900 mb-2\">Quick Micro-Quiz</h4>\r\n      <p className=\"text-sm text-amber-900 mb-2\">{question.q}</p>\r\n      <div className=\"space-y-2\">\r\n        {question.options.map((opt, idx) => (\r\n          <label key={idx} className=\"flex items-center space-x-2 text-sm text-amber-800\">\r\n            <input type=\"radio\" name=\"microquiz\" checked={choice===idx} onChange={() => setChoice(idx)} />\r\n            <span>{opt}</span>\r\n          </label>\r\n        ))}\r\n      </div>\r\n      <button onClick={submit} disabled={choice===null} className=\"mt-2 px-3 py-1.5 bg-amber-600 text-white rounded disabled:opacity-50\">Submit</button>\r\n      {submitted && (\r\n        <div className=\"mt-2 text-sm {choice===question.a ? 'text-green-700' : 'text-red-700'}\">\r\n          {choice===question.a ? 'Correct! Nice critical thinking.' : 'Not quite—look for official sources and avoid urgent requests.'}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MicroQuiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export const getCredibilityColor = score => {\n  if (score >= 0.8) return 'text-credible-600';\n  if (score >= 0.5) return 'text-warning-600';\n  return 'text-danger-600';\n};\nexport const getCredibilityBg = score => {\n  if (score >= 0.8) return 'bg-credible-100';\n  if (score >= 0.5) return 'bg-warning-100';\n  return 'bg-danger-100';\n};\nexport const getCredibilityBorder = score => {\n  if (score >= 0.8) return 'border-credible-300';\n  if (score >= 0.5) return 'border-warning-300';\n  return 'border-danger-300';\n};\nexport const getVerificationStatusColor = status => {\n  const colors = {\n    'Likely True': 'text-credible-600',\n    'Mixed': 'text-warning-600',\n    'Likely False': 'text-danger-600',\n    'Unverified': 'text-gray-600'\n  };\n  return colors[status] || 'text-gray-600';\n};\nexport const getVerificationStatusBg = status => {\n  const colors = {\n    'Likely True': 'bg-credible-100',\n    'Mixed': 'bg-warning-100',\n    'Likely False': 'bg-danger-100',\n    'Unverified': 'bg-gray-100'\n  };\n  return colors[status] || 'bg-gray-100';\n};\nexport const formatScore = score => {\n  return Math.round(score * 100);\n};\nexport const truncateText = (text, maxLength = 100) => {\n  if (text.length <= maxLength) return text;\n  return text.substr(0, maxLength) + '...';\n};\nexport const isValidUrl = string => {\n  try {\n    new URL(string);\n    return true;\n  } catch (_) {\n    return false;\n  }\n};\nexport const highlightSuspiciousPhrases = (text, suspiciousPhrases) => {\n  if (!suspiciousPhrases || suspiciousPhrases.length === 0) {\n    return text;\n  }\n  let highlightedText = text;\n\n  // Sort phrases by start position in descending order to avoid offset issues\n  const sortedPhrases = [...suspiciousPhrases].sort((a, b) => b.start_pos - a.start_pos);\n  sortedPhrases.forEach(phrase => {\n    const before = highlightedText.substring(0, phrase.start_pos);\n    const highlighted = highlightedText.substring(phrase.start_pos, phrase.end_pos);\n    const after = highlightedText.substring(phrase.end_pos);\n    highlightedText = before + `<span class=\"bg-yellow-200 px-1 rounded text-sm font-medium\" title=\"${phrase.reason}\">${highlighted}</span>` + after;\n  });\n  return highlightedText;\n};","map":{"version":3,"names":["getCredibilityColor","score","getCredibilityBg","getCredibilityBorder","getVerificationStatusColor","status","colors","getVerificationStatusBg","formatScore","Math","round","truncateText","text","maxLength","length","substr","isValidUrl","string","URL","_","highlightSuspiciousPhrases","suspiciousPhrases","highlightedText","sortedPhrases","sort","a","b","start_pos","forEach","phrase","before","substring","highlighted","end_pos","after","reason"],"sources":["E:/CredLens/frontend/src/utils/helpers.js"],"sourcesContent":["export const getCredibilityColor = (score) => {\r\n  if (score >= 0.8) return 'text-credible-600';\r\n  if (score >= 0.5) return 'text-warning-600';\r\n  return 'text-danger-600';\r\n};\r\n\r\nexport const getCredibilityBg = (score) => {\r\n  if (score >= 0.8) return 'bg-credible-100';\r\n  if (score >= 0.5) return 'bg-warning-100';\r\n  return 'bg-danger-100';\r\n};\r\n\r\nexport const getCredibilityBorder = (score) => {\r\n  if (score >= 0.8) return 'border-credible-300';\r\n  if (score >= 0.5) return 'border-warning-300';\r\n  return 'border-danger-300';\r\n};\r\n\r\nexport const getVerificationStatusColor = (status) => {\r\n  const colors = {\r\n    'Likely True': 'text-credible-600',\r\n    'Mixed': 'text-warning-600',\r\n    'Likely False': 'text-danger-600',\r\n    'Unverified': 'text-gray-600'\r\n  };\r\n  return colors[status] || 'text-gray-600';\r\n};\r\n\r\nexport const getVerificationStatusBg = (status) => {\r\n  const colors = {\r\n    'Likely True': 'bg-credible-100',\r\n    'Mixed': 'bg-warning-100',\r\n    'Likely False': 'bg-danger-100',\r\n    'Unverified': 'bg-gray-100'\r\n  };\r\n  return colors[status] || 'bg-gray-100';\r\n};\r\n\r\nexport const formatScore = (score) => {\r\n  return Math.round(score * 100);\r\n};\r\n\r\nexport const truncateText = (text, maxLength = 100) => {\r\n  if (text.length <= maxLength) return text;\r\n  return text.substr(0, maxLength) + '...';\r\n};\r\n\r\nexport const isValidUrl = (string) => {\r\n  try {\r\n    new URL(string);\r\n    return true;\r\n  } catch (_) {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const highlightSuspiciousPhrases = (text, suspiciousPhrases) => {\r\n  if (!suspiciousPhrases || suspiciousPhrases.length === 0) {\r\n    return text;\r\n  }\r\n\r\n  let highlightedText = text;\r\n  \r\n  // Sort phrases by start position in descending order to avoid offset issues\r\n  const sortedPhrases = [...suspiciousPhrases].sort((a, b) => b.start_pos - a.start_pos);\r\n  \r\n  sortedPhrases.forEach(phrase => {\r\n    const before = highlightedText.substring(0, phrase.start_pos);\r\n    const highlighted = highlightedText.substring(phrase.start_pos, phrase.end_pos);\r\n    const after = highlightedText.substring(phrase.end_pos);\r\n    \r\n    highlightedText = before + \r\n      `<span class=\"bg-yellow-200 px-1 rounded text-sm font-medium\" title=\"${phrase.reason}\">${highlighted}</span>` + \r\n      after;\r\n  });\r\n  \r\n  return highlightedText;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
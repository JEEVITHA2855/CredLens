{"ast":null,"code":"import _objectSpread from\"E:/CredLens/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Simple trusted source index: domain -> { score: 0..1, reason }\n// This is heuristic and for demo purposes; in production, fetch from a maintained list.\nexport const DOMAIN_INDEX={'who.int':{score:0.95,reason:'World Health Organization'},'cdc.gov':{score:0.94,reason:'Centers for Disease Control and Prevention'},'nih.gov':{score:0.92,reason:'National Institutes of Health'},'un.org':{score:0.9,reason:'United Nations'},'pib.gov.in':{score:0.9,reason:'Press Information Bureau (India)'},'factcheck.org':{score:0.9,reason:'Fact-checker'},'snopes.com':{score:0.88,reason:'Fact-checker'},'politifact.com':{score:0.88,reason:'Fact-checker'},'reuters.com':{score:0.85,reason:'Newswire'},'apnews.com':{score:0.85,reason:'Newswire'},'bbc.com':{score:0.83,reason:'Public broadcaster'},'theguardian.com':{score:0.8,reason:'Mainstream media'}};export function getDomain(){let hostname=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';return(hostname===null||hostname===void 0?void 0:hostname.toLowerCase())||'';}export function getDomainScore(url){try{const u=new URL(url);const host=getDomain(u.hostname);const exact=DOMAIN_INDEX[host];if(exact)return _objectSpread({host},exact);// heuristic: official domains end with .gov or .edu\nif(host.endsWith('.gov')||host.endsWith('.gov.in')||host.endsWith('.edu')){return{host,score:0.85,reason:'Official/educational domain'};}// default neutral\nreturn{host,score:0.6,reason:'Unknown domain (verify independently)'};}catch(_unused){return{host:'',score:0.5,reason:'Invalid URL'};}}","map":{"version":3,"names":["DOMAIN_INDEX","score","reason","getDomain","hostname","arguments","length","undefined","toLowerCase","getDomainScore","url","u","URL","host","exact","_objectSpread","endsWith","_unused"],"sources":["E:/CredLens/frontend/src/utils/trustedSources.js"],"sourcesContent":["// Simple trusted source index: domain -> { score: 0..1, reason }\r\n// This is heuristic and for demo purposes; in production, fetch from a maintained list.\r\nexport const DOMAIN_INDEX = {\r\n  'who.int': { score: 0.95, reason: 'World Health Organization' },\r\n  'cdc.gov': { score: 0.94, reason: 'Centers for Disease Control and Prevention' },\r\n  'nih.gov': { score: 0.92, reason: 'National Institutes of Health' },\r\n  'un.org': { score: 0.9, reason: 'United Nations' },\r\n  'pib.gov.in': { score: 0.9, reason: 'Press Information Bureau (India)' },\r\n  'factcheck.org': { score: 0.9, reason: 'Fact-checker' },\r\n  'snopes.com': { score: 0.88, reason: 'Fact-checker' },\r\n  'politifact.com': { score: 0.88, reason: 'Fact-checker' },\r\n  'reuters.com': { score: 0.85, reason: 'Newswire' },\r\n  'apnews.com': { score: 0.85, reason: 'Newswire' },\r\n  'bbc.com': { score: 0.83, reason: 'Public broadcaster' },\r\n  'theguardian.com': { score: 0.8, reason: 'Mainstream media' },\r\n};\r\n\r\nexport function getDomain(hostname = '') {\r\n  return hostname?.toLowerCase() || '';\r\n}\r\n\r\nexport function getDomainScore(url) {\r\n  try {\r\n    const u = new URL(url);\r\n    const host = getDomain(u.hostname);\r\n    const exact = DOMAIN_INDEX[host];\r\n    if (exact) return { host, ...exact };\r\n    // heuristic: official domains end with .gov or .edu\r\n    if (host.endsWith('.gov') || host.endsWith('.gov.in') || host.endsWith('.edu')) {\r\n      return { host, score: 0.85, reason: 'Official/educational domain' };\r\n    }\r\n    // default neutral\r\n    return { host, score: 0.6, reason: 'Unknown domain (verify independently)' };\r\n  } catch {\r\n    return { host: '', score: 0.5, reason: 'Invalid URL' };\r\n  }\r\n}\r\n"],"mappings":"yGAAA;AACA;AACA,MAAO,MAAM,CAAAA,YAAY,CAAG,CAC1B,SAAS,CAAE,CAAEC,KAAK,CAAE,IAAI,CAAEC,MAAM,CAAE,2BAA4B,CAAC,CAC/D,SAAS,CAAE,CAAED,KAAK,CAAE,IAAI,CAAEC,MAAM,CAAE,4CAA6C,CAAC,CAChF,SAAS,CAAE,CAAED,KAAK,CAAE,IAAI,CAAEC,MAAM,CAAE,+BAAgC,CAAC,CACnE,QAAQ,CAAE,CAAED,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,gBAAiB,CAAC,CAClD,YAAY,CAAE,CAAED,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,kCAAmC,CAAC,CACxE,eAAe,CAAE,CAAED,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,cAAe,CAAC,CACvD,YAAY,CAAE,CAAED,KAAK,CAAE,IAAI,CAAEC,MAAM,CAAE,cAAe,CAAC,CACrD,gBAAgB,CAAE,CAAED,KAAK,CAAE,IAAI,CAAEC,MAAM,CAAE,cAAe,CAAC,CACzD,aAAa,CAAE,CAAED,KAAK,CAAE,IAAI,CAAEC,MAAM,CAAE,UAAW,CAAC,CAClD,YAAY,CAAE,CAAED,KAAK,CAAE,IAAI,CAAEC,MAAM,CAAE,UAAW,CAAC,CACjD,SAAS,CAAE,CAAED,KAAK,CAAE,IAAI,CAAEC,MAAM,CAAE,oBAAqB,CAAC,CACxD,iBAAiB,CAAE,CAAED,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,kBAAmB,CAC9D,CAAC,CAED,MAAO,SAAS,CAAAC,SAASA,CAAA,CAAgB,IAAf,CAAAC,QAAQ,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CACrC,MAAO,CAAAD,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEI,WAAW,CAAC,CAAC,GAAI,EAAE,CACtC,CAEA,MAAO,SAAS,CAAAC,cAAcA,CAACC,GAAG,CAAE,CAClC,GAAI,CACF,KAAM,CAAAC,CAAC,CAAG,GAAI,CAAAC,GAAG,CAACF,GAAG,CAAC,CACtB,KAAM,CAAAG,IAAI,CAAGV,SAAS,CAACQ,CAAC,CAACP,QAAQ,CAAC,CAClC,KAAM,CAAAU,KAAK,CAAGd,YAAY,CAACa,IAAI,CAAC,CAChC,GAAIC,KAAK,CAAE,OAAAC,aAAA,EAASF,IAAI,EAAKC,KAAK,EAClC;AACA,GAAID,IAAI,CAACG,QAAQ,CAAC,MAAM,CAAC,EAAIH,IAAI,CAACG,QAAQ,CAAC,SAAS,CAAC,EAAIH,IAAI,CAACG,QAAQ,CAAC,MAAM,CAAC,CAAE,CAC9E,MAAO,CAAEH,IAAI,CAAEZ,KAAK,CAAE,IAAI,CAAEC,MAAM,CAAE,6BAA8B,CAAC,CACrE,CACA;AACA,MAAO,CAAEW,IAAI,CAAEZ,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,uCAAwC,CAAC,CAC9E,CAAE,MAAAe,OAAA,CAAM,CACN,MAAO,CAAEJ,IAAI,CAAE,EAAE,CAAEZ,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,aAAc,CAAC,CACxD,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}